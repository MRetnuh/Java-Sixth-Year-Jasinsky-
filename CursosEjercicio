import java.util.InputMismatchException;
import java.util.Scanner;

public class Principal {
    public static void main(String[] args) {
        final int idMinimo = 90;
        final int idMaximo = 900;
        final int maxCursos = 90;
        final int valoresCurso = 8;
        final int categoriaMinima = 1;
        final int categoriaMaxima = 7;
        final int nivelMinimo = 1;
        final int nivelMaximo = 4;
        final int calificacionMinima = 0;
        final int calificacionMaxima = 5;
        final int duracionMinima = 1;
        final int precioMinimo = 1;
        int[] cantidadCursos = {0}; 
        final int opcionMinima= 1;
        final int opcionMaxima = 11;
        final int columnaId = 0;
        final int columnaTitulo = 1;
        final int columnaInstructor = 2;
        final int columnaCategoria = 3;
        final int columnaNivel = 4;
        final int columnaDuracion = 5;
        final int columnaPrecio = 6;
        final int columnaCalificacion = 7;
        final String[][] cursos = new String[maxCursos][valoresCurso];
        final String [] categorias = {"Programación", "Diseño","Marketing","Negocios","Idiomas","Música","Otros"};
        final String[] niveles = { "Principiante", "Intermedio", "Avanzado", "Todos los niveles" };
        boolean MODO_PRUEBA = true;
        Scanner s = new Scanner(System.in);
        int opcion = 0;
        
        if(MODO_PRUEBA) {
            cantidadCursos[0] = cargarDatosPrueba(cursos);  // Cargar datos de prueba y actualizar cantidadCursos
        }
        
        do {
            opcion = mostrarMenuYElegirOpcion(s, opcionMinima, opcionMaxima);
            generarAccion(opcion, s, idMinimo, idMaximo, maxCursos, valoresCurso, categoriaMinima, categoriaMaxima, 
                          nivelMinimo, nivelMaximo, calificacionMinima, calificacionMaxima, duracionMinima, 
                          precioMinimo, cantidadCursos, cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                          columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles);
        } while(opcion != 11);
        s.close();
    }

    public static int mostrarMenuYElegirOpcion(Scanner s, final int min, final int max) {
        int opcion;
            System.out.println("\nIngrese la acción que desea realizar:");
            System.out.println("1) Agregar curso");
            System.out.println("2) Consultar curso");
            System.out.println("3) Modificar curso");
            System.out.println("4) Eliminar curso");
            System.out.println("5) Listar todos los cursos");
            System.out.println("6) Buscar cursos por categoría");
            System.out.println("7) Buscar cursos por nivel");
            System.out.println("8) Buscar cursos por rango de precio");
            System.out.println("9) Buscar cursos mejor calificados");
            System.out.println("10) Calcular estadísticas de la plataforma");
            System.out.println("11) Salir \n");
            opcion = ingresarEntero(s, min, max);
        return opcion;
    }

    public static int ingresarEntero(Scanner s, final int min, final int max) {
        boolean num = false;
        int numero = 0;
        do {
        	num = false;
            try {
            numero = s.nextInt();
            if(numero > max || numero < min) {
                System.out.println("Ingrese un número válido");
                num = true;
            }
        } catch(InputMismatchException e){
            System.out.println("Ingrese un número");
            num = true;
        } catch(Exception e){
            System.out.println("Error");
        }
            finally {
				s.nextLine();
            }
        } while(num);
    return numero;
    }

    public static void generarAccion(int opcion, Scanner scanner, final int idMinimo, final int idMaximo, final int maxCursos, 
                                      final int valoresCurso, final int categoriaMinima, final int categoriaMaxima, 
                                      final int nivelMinimo, final int nivelMaximo, final int calificacionMinima, 
                                      final int calificacionMaxima, final int duracionMinima, final int precioMinimo, 
                                      int[] cantidadCursos, final String[][] cursos, final int columnaId, final int columnaTitulo, 
                                      final int columnaInstructor, final int columnaCategoria, final int columnaNivel, 
                                      final int columnaDuracion, final int columnaPrecio, final int columnaCalificacion,  final String [] categorias,  final String [] niveles) {
        switch(opcion) {
            case 1:
            	if(cantidadCursos[0] < maxCursos) {
                cargarCurso(scanner, idMinimo, idMaximo, maxCursos, valoresCurso, categoriaMinima, categoriaMaxima, 
                            nivelMinimo, nivelMaximo, calificacionMinima, calificacionMaxima, duracionMinima, 
                            precioMinimo, cantidadCursos, cursos, columnaId);
            	}
            	else {
            		  System.out.println("No hay espacio suficiente. Se alcanzo el limite maximo de cursos. Elimine cursos si quiere ingresar mas");
            	}
                break;
            case 2:
            	if(cantidadCursos[0] > 0) {
            	int curso = buscarCurso(scanner, cursos, idMinimo, idMaximo, cantidadCursos, columnaId, columnaTitulo);
            	consultarCurso(curso, cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                        columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles);
            	}
            	else {
            		 System.out.println("No hay cursos");
            	     }
                break;
            case 3:
            	if(cantidadCursos[0] > 0) {
                modificarCurso(scanner, idMinimo, idMaximo, maxCursos, valoresCurso, categoriaMinima, categoriaMaxima, 
                        nivelMinimo, nivelMaximo, calificacionMinima, calificacionMaxima, duracionMinima, 
                        precioMinimo, cantidadCursos, cursos, columnaId, columnaTitulo);
            	}
            	else {
           		 System.out.println("No hay cursos");
           	     }
                break;
            case 4:  
            	if(cantidadCursos[0] > 0) {
            	eliminarCurso(scanner, cursos, idMinimo, idMaximo, cantidadCursos, columnaId, columnaTitulo);
            	}
            	else {
              		 System.out.println("No hay cursos");
              	     }
                break;
            case 5:
            	if(cantidadCursos[0] > 0) {
                listarCursos(cursos, cantidadCursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                        columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles);
            	}
            	else {
             		 System.out.println("No hay cursos");
             	     }
                break;
            case 6:
            	if(cantidadCursos[0] > 0) {
                buscarCursosPorCategoria(cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                        columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles, scanner, 
                        categoriaMinima, categoriaMaxima, cantidadCursos);
            	}
            	else {
            		 System.out.println("No hay cursos");
            	     }
                break;
            case 7:
            	if(cantidadCursos[0] > 0) {
            		 buscarCursosPorNivel(cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                             columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles, scanner, 
                             nivelMinimo, nivelMaximo, cantidadCursos);
                	}
                	else {
                		 System.out.println("No hay cursos");
                	     }
                break;
            case 8:
            	if(cantidadCursos[0] > 0) {
            		buscarCursosPorRangoPrecio(cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                             columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles, scanner, 
                             precioMinimo, cantidadCursos);
                	}
                	else {
                		 System.out.println("No hay cursos");
                	     }
                break;
            case 9:
            	if(cantidadCursos[0] > 0) {
                    buscarCursosMejorCalificados(cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                            columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles, 
                            cantidadCursos);
                	}
                	else {
                		 System.out.println("No hay cursos");
                	     }
                break;
            case 10:
            	if(cantidadCursos[0] > 0) {
                    calcularEstadisticas(cursos, columnaId, columnaTitulo, columnaInstructor, columnaCategoria, 
                            columnaNivel, columnaDuracion, columnaPrecio, columnaCalificacion, categorias, niveles, categoriaMaxima, nivelMaximo, cantidadCursos);
                	}
                	else {
                		 System.out.println("No hay cursos");
                	     }
                break;
            case 11:
                System.out.println("Gracias por usar este codigo");
                break;
        }
    }

    public static String[]cargarCurso(Scanner scanner, final int idMinimo, final int idMaximo, final int maxCursos, 
                                   final int valoresCurso, final int categoriaMinima, final int categoriaMaxima, 
                                   final int nivelMinimo, final int nivelMaximo, final int calificacionMinima, 
                                   final int calificacionMaxima, final int duracionMinima, final int precioMinimo, 
                                   int[] cantidadCursos, final String[][] cursos, final int columnaId) {
        String nuevoCurso[];
        boolean comprobador = false;
        int numero = 0;
        String titulo, instructor, id, categoria, nivel, duracion, precio, calificacion;
        int maxValue = Integer.MAX_VALUE;
        do {
        	comprobador = false;
            System.out.println("\nIngrese la ID del curso ");
            numero =  ingresarEntero(scanner, idMinimo, idMaximo);
            for(int i = 0; i < cantidadCursos[0]; i++) {
   			 if(numero == Integer.valueOf(cursos[i][columnaId])) {
   				System.out.println("\nEsa id ya existe. Ingrese otra");
   				comprobador = true;
   			 }
            }
            	}while(comprobador);
        id = String.valueOf(numero);
        System.out.println("\nIngrese el Título del curso");
        titulo = scanner.nextLine();
        System.out.println("\nIngrese el Nombre del Instructor del curso");
        instructor = scanner.nextLine();
        System.out.println("\nIngrese la categoría del curso (1 para Programación, 2 para Diseño, 3 para Marketing, 4 para Negocios, 5 para Idiomas, 6 para Música, 7 para Otros)");
        numero = ingresarEntero(scanner, categoriaMinima, categoriaMaxima);
        categoria =  String.valueOf(numero);
        System.out.println("\nIngrese el Nivel del curso (1 para Principiante, 2 para Intermedio, 3 para Avanzado, 4 para Todos los niveles)");
        numero = ingresarEntero(scanner, nivelMinimo, nivelMaximo);
        nivel = String.valueOf(numero);
            System.out.println("\nIngrese la Duración del curso en cantidad de horas totales");
            numero = ingresarEntero(scanner, duracionMinima, maxValue);
          duracion =  String.valueOf(numero);
            System.out.println("\nIngrese el Precio del curso");
            numero = ingresarEntero(scanner, precioMinimo, maxValue);
            precio =  String.valueOf(numero);
            System.out.println("\nIngrese la Calificación del curso (1 a 5)");
            numero =  ingresarEntero(scanner, calificacionMinima, calificacionMaxima);
            calificacion =  String.valueOf(numero);
        
        nuevoCurso = new String[]{id, titulo, instructor, categoria, nivel, duracion, precio, calificacion};
        cursos[cantidadCursos[0]] = nuevoCurso;
        cantidadCursos[0]++;  // Aumentamos la cantidad de cursos
        System.out.println("\nSe ha ingresado correctamente el nuevo curso");
        return nuevoCurso;
    }

    public static void listarCursos(final String[][] CURSOS, int []cantidadCursos, final int columnaId, final int columnaTitulo, 
            final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
            final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles) {
        for (int i = 0; i < cantidadCursos[0]; i++) {
            if (CURSOS[i] != null) {
                System.out.println("Curso Número: " + (i + 1));
                System.out.println("ID: " + CURSOS[i][columnaId]);
                System.out.println("Título: " + CURSOS[i][columnaTitulo]);
                System.out.println("Instructor: " + CURSOS[i][columnaInstructor]);
                System.out.println("Categoría: " + categorias[Integer.parseInt(CURSOS[i][columnaCategoria]) - 1]);
                System.out.println("Nivel: " + niveles[Integer.parseInt(CURSOS[i][columnaNivel]) - 1]);
                System.out.println("Duración: " + CURSOS[i][columnaDuracion] + "hs");
                System.out.println("Precio: $" + CURSOS[i][columnaPrecio]);
                System.out.println("Calificación: " + CURSOS[i][columnaCalificacion] + " estrellas");
                System.out.println("\n\n");
            }
        }
    }
 public static int buscarCurso(Scanner s, final String[][] CURSOS, final int idMinima, final int idMaxima, 
		 int[] cantidadCursos, final int columnaId, final int columnaTitulo) {
	 int opcion;
	 String titulo;
	 int id;
	 final int primeraOpcion = 1;
	 final int segundaOpcion = 2;
	 int posicionCurso = -1;
	  System.out.println("Como quiere buscar el curso? Elija el numero de la opcion");
	  System.out.println("1) Id");
	  System.out.println("2) Titulo");
	 opcion = ingresarEntero(s, primeraOpcion, segundaOpcion);
	 switch(opcion) {
	 case 1:
		 System.out.println("1) Ingrese la id correspondiente (debe estar entre " +  idMinima + " y " + idMaxima + ")");
		 id = validarID(CURSOS, cantidadCursos, idMinima, idMaxima, s, columnaId);
		 int i = 0;
		 while(i < cantidadCursos[0]) {
			 if(id == Integer.parseInt(CURSOS[i][columnaId])) {
				 posicionCurso = i;
			 }
			 i++;
		 }
		 break;
	 case 2:
		 System.out.println("2) Ingrese el titulo:");
		 titulo = s.nextLine();
		 int j = 0;
         while(j < cantidadCursos[0]) {
			 if(titulo.equalsIgnoreCase(CURSOS[j][columnaTitulo])) {
				 posicionCurso = j;
			 }
		 }
		 
	 }
	 return posicionCurso;
 }
 public static void consultarCurso(int curso, final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles) {
	 if(curso > -1) {
     System.out.println("Curso Número: " + (curso + 1));
	 System.out.println("\nid: " + cursos[curso][columnaId]);
	 System.out.println("titulo: " + cursos[curso][columnaTitulo]);
	 System.out.println("instructor: " + cursos[curso][columnaInstructor]);
	 System.out.println("categoria: " + categorias[Integer.parseInt(cursos[curso][columnaCategoria]) - 1]);
	 System.out.println("nivel: " + niveles[Integer.parseInt(cursos[curso][columnaNivel]) - 1]);
	 System.out.println("duracion: " + cursos[curso][columnaDuracion] + "hs");
	 System.out.println("precio: $" + cursos[curso][columnaPrecio]);
	 System.out.println("calificacion: " + cursos[curso][columnaCalificacion] + " estrellas\n\n");
	 }
	 else {
		 System.out.println("No existe ese curso");
	 }
 }
 public static int validarID(final String[][]cursos, int[] cantidadCursos, final int idMinima, final int idMaxima, Scanner s, final int columnaId) {
	 int id;
	 int idEncontrada = 0;
		 id =  ingresarEntero(s, idMinima, idMaxima);
		 int i = 0;
	while(i < cantidadCursos[0]) {
		 if(id == Integer.parseInt(cursos[i][columnaId])) {
			 idEncontrada =  id;
			 }
		 i++;
	 }
	 return idEncontrada;
 }
 public static void modificarCurso(Scanner s, final int idMinimo, final int idMaximo, final int maxCursos, 
         final int valoresCurso, final int categoriaMinima, final int categoriaMaxima, 
         final int nivelMinimo, final int nivelMaximo, final int calificacionMinima, 
         final int calificacionMaxima, final int duracionMinima, final int precioMinimo, 
         int[] cantidadCursos, final String[][] cursos, final int columnaId, final int columnaTitulo) {
	 int cursoElegido = buscarCurso(s, cursos, idMinimo, idMaximo, cantidadCursos, columnaId, columnaTitulo);
	 String[] cursoCambiado =   cargarCurso(s, idMinimo, idMaximo, maxCursos, valoresCurso, categoriaMinima, categoriaMaxima, 
             nivelMinimo, nivelMaximo, calificacionMinima, calificacionMaxima, duracionMinima, 
             precioMinimo, cantidadCursos, cursos, columnaId);
	 cursos[cursoElegido] = cursoCambiado;
	 cantidadCursos[0]--;
	 
 }
 public static void eliminarCurso(Scanner s, final String[][] cursos, final int idMinimo, final int idMaximo, 
		 int[] cantidadCursos, final int columnaId, final int columnaTitulo) {
	 int cursoEliminado = buscarCurso(s, cursos, idMinimo, idMaximo, cantidadCursos, columnaId, columnaTitulo);
	 if(cursoEliminado > 0) {
	for(int i = cursoEliminado; i < cantidadCursos[0] - 1; i++) {
		cursos[i] = cursos[i +1];
	}
	
	System.out.println("El curso se ha eliminado correctamente");
	cantidadCursos[0]--;
 }
	 else {
			System.out.println("Ese curso no existe");
	 }
 }
 public static void buscarCursosPorCategoria(final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles, 
         Scanner s,  final int categoriaMinima, final int categoriaMaxima, int []cantidadCursos) {
		System.out.println("Ingrese la categoria que busca (1 para Programación, 2 para Diseño, 3 para Marketing, 4 para Negocios, 5 para Idiomas, 6 para Música, 7 para Otros)");   
		int opcion;
		boolean noCursos = false;
		boolean siCursos = false;
			opcion = ingresarEntero(s, categoriaMinima, categoriaMaxima);
		 int opc = Integer.valueOf(opcion);
		 int i= 0;
		  while(i < cantidadCursos[0]) {
	            if (cursos[i] != null && opc ==  Integer.valueOf(cursos[i][columnaCategoria])) {
	            	siCursos = true;
	                System.out.println("Curso Número: " + (i + 1));
	                System.out.println("ID: " + cursos[i][columnaId]);
	                System.out.println("Título: " + cursos[i][columnaTitulo]);
	                System.out.println("Instructor: " + cursos[i][columnaInstructor]);
	                System.out.println("Categoría: " + categorias[Integer.parseInt(cursos[i][columnaCategoria]) - 1]);
	                System.out.println("Nivel: " + niveles[Integer.parseInt(cursos[i][columnaNivel]) - 1]);
	                System.out.println("Duración: " + cursos[i][columnaDuracion] + "hs");
	                System.out.println("Precio: $" + cursos[i][columnaPrecio]);
	                System.out.println("Calificación: " + cursos[i][columnaCalificacion] + " estrellas");
	                System.out.println("\n\n");
	            }
	            else {
	            	 noCursos = true;
	            }
	            i++;
	 
 }
		  if(noCursos && !siCursos) {
			  System.out.println("No hay cursos con esa categoria");
		  }
 }
 public static void buscarCursosPorNivel(final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles, 
         Scanner s,  final int nivelMinimo, final int nivelMaximo, int []cantidadCursos) {
		System.out.println("Ingrese el nivel que busca (1 para Principiante, 2 para Intermedio, 3 para Avanzado, 4 para Todos los niveles)");   
		int opcion;
		boolean noCursos = false;
		boolean siCursos = false;
			opcion = ingresarEntero(s, nivelMinimo, nivelMaximo);
			int i = 0;
		  while(i < cantidadCursos[0]) {
	            if (cursos[i] != null && opcion ==  Integer.valueOf(cursos[i][columnaNivel])) {
	            	siCursos = true;
	                System.out.println("Curso Número: " + (i + 1));
	                System.out.println("ID: " + cursos[i][columnaId]);
	                System.out.println("Título: " + cursos[i][columnaTitulo]);
	                System.out.println("Instructor: " + cursos[i][columnaInstructor]);
	                System.out.println("Categoría: " + categorias[Integer.parseInt(cursos[i][columnaCategoria]) - 1]);
	                System.out.println("Nivel: " + niveles[Integer.parseInt(cursos[i][columnaNivel]) - 1]);
	                System.out.println("Duración: " + cursos[i][columnaDuracion] + "hs");
	                System.out.println("Precio: $" + cursos[i][columnaPrecio]);
	                System.out.println("Calificación: " + cursos[i][columnaCalificacion] + " estrellas");
	                System.out.println("\n\n");
	            }
	            else {
	            	 noCursos = true;
	            }
	 i++;
 }
		  if(noCursos && !siCursos) {
			  System.out.println("No hay cursos con ese nivel");
		  }
 }
 public static void buscarCursosMejorCalificados(final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles, int []cantidadCursos) {
		int calificacionMaxima = 0;
		int i = 0;
		  while(i < cantidadCursos[0]) {
	            if (calificacionMaxima < Integer.valueOf(cursos[i][columnaCalificacion])) {
	            	calificacionMaxima =  Integer.valueOf(cursos[i][columnaCalificacion]);
	            }
	          
 } 
		  System.out.println("La mejor calificacion es " + calificacionMaxima);   
		  System.out.println("Los cursos con esa calificacion son:");  
		  int j = 0;
		  while(j < cantidadCursos[0]) {
	            if (cursos[j] != null && calificacionMaxima ==  Integer.valueOf(cursos[j][columnaCalificacion])) {
	                System.out.println("Curso Número: " + (j + 1));
	                System.out.println("ID: " + cursos[j][columnaId]);
	                System.out.println("Título: " + cursos[j][columnaTitulo]);
	                System.out.println("Instructor: " + cursos[j][columnaInstructor]);
	                System.out.println("Categoría: " + categorias[Integer.parseInt(cursos[j][columnaCategoria]) - 1]);
	                System.out.println("Nivel: " + niveles[Integer.parseInt(cursos[j][columnaNivel]) - 1]);
	                System.out.println("Duración: " + cursos[j][columnaDuracion] + "hs");
	                System.out.println("Precio: $" + cursos[j][columnaPrecio]);
	                System.out.println("Calificación: " + cursos[j][columnaCalificacion] + " estrellas");
	                System.out.println("\n\n");
	            }
	            j++;
		  }
 }
 public static void buscarCursosPorRangoPrecio(final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles, 
         Scanner s,  final int precioMinimo, int []cantidadCursos) {
	    int precioMin, precioMax;
	    boolean error = false;
	    int maxValue = Integer.MAX_VALUE;
		System.out.println("Ingrese el primer precio como minimo");  
		precioMin = ingresarEntero(s, precioMinimo, maxValue);
		System.out.println("Ingrese el segundo precio maximo");  
		do {
			error = false;
			precioMax = ingresarEntero(s, precioMinimo, maxValue);
			if(precioMax <= precioMin) {
				System.out.println("Ingrese un precio que sea mayor al precio minimo");  
				error = true;
			}
			}while(error);
		boolean noCursos = false;
		boolean siCursos = false;
		int i = 0;
		  while(i < cantidadCursos[0]) {
	            if (cursos[i] != null && precioMin <=  Integer.valueOf(cursos[i][columnaPrecio]) &&  precioMax >=  Integer.valueOf(cursos[i][columnaPrecio])) {
	            	siCursos = true;
	                System.out.println("Curso Número: " + (i + 1));
	                System.out.println("ID: " + cursos[i][columnaId]);
	                System.out.println("Título: " + cursos[i][columnaTitulo]);
	                System.out.println("Instructor: " + cursos[i][columnaInstructor]);
	                System.out.println("Categoría: " + categorias[Integer.parseInt(cursos[i][columnaCategoria]) - 1]);
	                System.out.println("Nivel: " + niveles[Integer.parseInt(cursos[i][columnaNivel]) - 1]);
	                System.out.println("Duración: " + cursos[i][columnaDuracion] + "hs");
	                System.out.println("Precio: $" + cursos[i][columnaPrecio]);
	                System.out.println("Calificación: " + cursos[i][columnaCalificacion] + " estrellas");
	                System.out.println("\n\n");
	            }
	            else {
	            	 noCursos = true;
	            }
	            i++;
	 
 }
		  if(noCursos && !siCursos) {
			  System.out.println("No hay cursos con ese precio");
		  }
 
 }
 public static void calcularEstadisticas(final String[][] cursos, final int columnaId, final int columnaTitulo, 
         final int columnaInstructor, final int columnaCategoria, final int columnaNivel,  final int columnaDuracion, 
         final int columnaPrecio, final int columnaCalificacion, final String [] categorias,  final String [] niveles, 
         final int categoriaMaxima, final int nivelMaximo, int []cantidadCursos) {
	    int acumuladorCursosPorCategoria [] = new int [categoriaMaxima];
		int acumuladorCursosPorNivel [] = new int [nivelMaximo];
		int acumuladorPrecioPorCategoria [] = new int [categoriaMaxima];
	    float calificacionPromedio = 0;
	    float duracionPromedio = 0;
		for (int i = 0; i < cantidadCursos[0]; i++) {
			acumuladorCursosPorCategoria[Integer.parseInt(cursos[i][columnaCategoria])-1]++;
			acumuladorCursosPorNivel[Integer.parseInt(cursos[i][columnaNivel])-1]++;
			acumuladorPrecioPorCategoria[Integer.parseInt(cursos[i][columnaCategoria])-1] += Integer.parseInt(cursos[i][columnaPrecio]);
			calificacionPromedio += Integer.parseInt(cursos[i][columnaCalificacion]);
			duracionPromedio += Integer.parseInt(cursos[i][columnaDuracion]);
		}
		System.out.println("\n\n");
		for (int i = 0; i < categoriaMaxima; i++) {
			System.out.println("Porcentaje de cursos en la categoria "+categorias[i]+" es: "+(acumuladorCursosPorCategoria[i] * 100) / cantidadCursos[0]+"%");
		}
		System.out.println("\n\n");
		for (int i = 0; i < nivelMaximo; i++) {
			System.out.println("Porcentaje de cursos en el nivel "+niveles[i]+" es: "+(acumuladorCursosPorNivel[i] * 100) / cantidadCursos[0]+"%");
		}
		System.out.println("\n\n");
		for (int i = 0; i < categoriaMaxima; i++) {
			if (acumuladorCursosPorCategoria[i] != 0) {
				System.out.println("Precio promedio de cursos en la categoria "+categorias[i]+" es: $"+(acumuladorPrecioPorCategoria[i]/acumuladorCursosPorCategoria[i]));
			}else {
				 System.err.println("No hay cursos en la categoría " + categorias[i]);
			}
		}
		System.out.println("\n\n");
		System.out.println("Calificacion promedio general: " + (calificacionPromedio/cantidadCursos[0])+ " estrellas");
		System.out.println("\n");
		System.out.println("Duracion promedio general: " + (duracionPromedio/cantidadCursos[0]) + "hs");
		System.out.println("\n\n");
	}
    public static int cargarDatosPrueba(final String[][] cursos) {
        final int cantidadItems = 10;
        cursos[0] = new String[]{"101", "Java desde cero", "Juan Pérez", "1", "1", "30", "5000", "5"};
        cursos[1] = new String[]{"102", "Diseño UX", "Laura Gómez", "2", "2", "25", "6000", "5"};
        cursos[2] = new String[]{"103", "Marketing Digital", "Carlos Díaz", "3", "1", "20", "4500", "3"};
        cursos[3] = new String[]{"104", "Negocios Exitosos", "Marta Ruiz", "4", "3", "40", "7000", "4"};
        cursos[4] = new String[]{"105", "Inglés Básico", "Robert Smith", "5", "1", "35", "5500", "4"};
        cursos[5] = new String[]{"106", "Guitarra para principiantes", "Carlos Sánchez", "6", "2", "50", "4000", "1"};
        cursos[6] = new String[]{"107", "Curso de filosofía", "Carlos Martínez", "7", "3", "15", "2000", "4"};
        cursos[7] = new String[]{"108", "Curso de ciencias sociales", "Javier López", "7", "4", "10", "1500", "3"};
        cursos[8] = new String[]{"109", "Python para Data Science", "Ana López", "1", "2", "60", "8000", "4"};
        cursos[9] = new String[]{"110", "Introducción al Marketing", "María Pérez", "3", "1", "40", "6500", "4"};
        
        return cantidadItems; 
    }
}
